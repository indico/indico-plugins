name: CI

on:
  push:
    branches:
      - master
      - 2.3-maintenance
  pull_request:
    branches:
      - master
      - 2.3-maintenance

jobs:
  install:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432
        options: --health-cmd pg_isready --health-interval 5s --health-timeout 5s --health-retries 10
    strategy:
      matrix:
        include:
          - plugin: "livesync"
          - plugin: "payment_paypal"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache-pip
        with:
          path: .venv
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
      - name: Setup Python
        uses: actions/setup-python@v1
        if: steps.cache-pip.outputs.cache-hit != 'true'
        with:
          python-version: 3.9
      - name: Get branch name (base or pull_request)
        shell: bash
        run: |
          echo $(echo ${GITHUB_HEAD_REF:-${GITHUB_REF}} | sed 's/.*\///')
          echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF:-${GITHUB_REF}} | sed 's/.*\///')" >> $GITHUB_ENV
      - name: Install python dependencies
        if: steps.cache-pip.outputs.cache-hit != 'true'
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install -U pip setuptools
          pip install wheel
          pip install -e git+https://github.com/indico/indico.git@${BRANCH_NAME}#egg=indico
      - name: Activate virtualenv for later steps
        run: |
          echo "VIRTUAL_ENV=$(pwd)/.venv" >> $GITHUB_ENV
          echo "$(pwd)/.venv/bin" >> $GITHUB_PATH
      - name: Install
        run: |
          cd "${GITHUB_WORKSPACE}/${{ matrix.plugin }}"
          pip install -e .
      - name: Setup database
        run: |
          sudo apt-get install postgresql-client libpq-dev
          export PGHOST=localhost
          export PGPORT=${{ job.services.postgres.ports[5432] }}
          export PGUSER=postgres
          createuser indicotest
          createdb -O indicotest indicotest
          psql indicotest -c 'CREATE EXTENSION unaccent;'
          psql indicotest -c 'CREATE EXTENSION pg_trgm;'
      - name: Test
        run: |
          export INDICO_TEST_DATABASE_URI="postgresql://indicotest@localhost:${{ job.services.postgres.ports[5432] }}/indicotest"
          pytest --color=yes "${GITHUB_WORKSPACE}/${{ matrix.plugin }}"
