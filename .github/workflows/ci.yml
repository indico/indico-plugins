name: CI

on:
  push:
    branches:
      - master
      - ci
  pull_request:
    branches:
      - master
      - ci

jobs:
  ci:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432
        options: --health-cmd pg_isready --health-interval 5s --health-timeout 5s --health-retries 10

    strategy:
      matrix:
        include:
          - plugin: livesync
          - plugin: payment_paypal
          - plugin: vc_zoom

    steps:
      - uses: actions/checkout@v2

      - name: Get upstream branch name
        run: |
          if [[ $GITHUB_EVENT_NAME == push ]]; then
            upstream_branch="${GITHUB_REF#refs/heads/}"
          elif [[ $GITHUB_EVENT_NAME == pull_request ]]; then
            upstream_branch="${GITHUB_HEAD_REF#refs/heads/}"
          else
            echo "unsupported event: $GITHUB_EVENT_NAME"
            exit 1
          fi
          if [[ $upstream_branch != master && $upstream_branch != *-maintenance ]]; then
            echo "assuming there is no branch named ${upstream_branch} in indico; defaulting to master"
            upstream_branch=master
          fi
          echo "INDICO_BRANCH=${upstream_branch}" >> "$GITHUB_ENV"

      - uses: actions/cache@v2
        id: cache-pip
        with:
          path: .venv
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}

      - name: Setup Python
        uses: actions/setup-python@v1
        if: steps.cache-pip.outputs.cache-hit != 'true'
        with:
          python-version: 3.9

      - name: Install system dependencies
        if: steps.cache-pip.outputs.cache-hit != 'true'
        run: sudo apt-get install libpq-dev

      - name: Install python dependencies
        if: steps.cache-pip.outputs.cache-hit != 'true'
        run: |
          python3.9 -m venv .venv
          source .venv/bin/activate
          pip install -U pip setuptools
          pip install wheel
          pip install git+https://github.com/indico/indico.git@${INDICO_BRANCH}#egg=indico[dev]

      - name: Activate virtualenv for later steps
        run: |
          echo "VIRTUAL_ENV=$(pwd)/.venv" >> $GITHUB_ENV
          echo "$(pwd)/.venv/bin" >> $GITHUB_PATH

      - name: Re-install indico if cache used
        if: steps.cache-pip.outputs.cache-hit == 'true'
        run: |
          pip uninstall -y indico
          pip install git+https://github.com/indico/indico.git@${INDICO_BRANCH}#egg=indico[dev]

      - name: Install plugin
        run: |
          cd "${GITHUB_WORKSPACE}/${{ matrix.plugin }}"
          pip install -e .

      - name: Setup database
        run: |
          sudo apt-get install postgresql-client libpq-dev
          export PGHOST=localhost
          export PGPORT=${{ job.services.postgres.ports[5432] }}
          export PGUSER=postgres
          createuser indicotest
          createdb -O indicotest indicotest
          psql indicotest -c 'CREATE EXTENSION unaccent;'
          psql indicotest -c 'CREATE EXTENSION pg_trgm;'

      - name: Run tests
        run: |
          export INDICO_TEST_DATABASE_URI="postgresql://indicotest@localhost:${{ job.services.postgres.ports[5432] }}/indicotest"
          cd "${GITHUB_WORKSPACE}/${{ matrix.plugin }}"
          pytest --color=yes
